{
  "ma-alert/text": {
    "type": "string",
    "description": "Inner text of the component"
  },
  "ma-alert/title": {
    "type": "string",
    "description": "Title of the component"
  },
  "ma-alert/tone": {
    "type": "string",
    "description": "Sets the type of component",
    "options": [
      "red",
      "blue",
      "green",
      "yellow"
    ]
  },
  "ma-button/tag": {
    "type": "string",
    "description": "Sets the HTML tag element of the component",
    "options": [
      "button",
      "a"
    ]
  },
  "ma-button/rounded": {
    "type": "boolean",
    "description": "Sets the button borders to rounded style"
  },
  "ma-button/loading": {
    "type": "boolean",
    "description": "Sets the button state to loading and this becomes disabled"
  },
  "ma-button/disabled": {
    "type": "boolean",
    "description": "Sets the button state as disabled"
  },
  "ma-button/category": {
    "type": "string",
    "description": "Sets the component displaying style",
    "options": [
      "primary",
      "secondary",
      "white",
      "gradient",
      "no-background",
      "no-background-white"
    ]
  },
  "ma-card/tone": {
    "type": "string",
    "description": "Sets card background color tone",
    "options": [
      "white",
      "gray"
    ]
  },
  "ma-columns/columns": {
    "type": "array|string",
    "description": "Defines the columns layout.\n\n```ts\n<ma-column columns=\"6 6\">...</ma-column>\n<ma-column :columns=\"['12', '4 4 4', '6 6']\">...</ma-column>\n```"
  },
  "ma-columns/gap": {
    "type": "array|string",
    "description": "Sets the space gap between children.\n\nIf an array is passed, values will target the design system breakpoints.\n```ts\n// This would apply medium on all the different breakpoints\nspace = 'small'\n// This would apply none on mobile, small on tablet and large on desktop\n:space=\"['none', 'small', 'large']\"\n```\n\n[Spacing tokens documentation](https://holaluz.github.io/margarita/?path=/story/tokens-spacing--page)",
    "options": [
      "none",
      "xsmall",
      "small",
      "medium",
      "large",
      "xlarge",
      "2x-large",
      "3x-large",
      "4x-large",
      "5x-large",
      "6x-large"
    ]
  },
  "ma-columns/justify": {
    "type": "string",
    "description": "Defines how the space between and around content items is distributed. Defaults to start.",
    "options": [
      "space-around",
      "space-between",
      "start",
      "end",
      "center"
    ]
  },
  "ma-columns/verticalAlign": {
    "type": "string",
    "description": "Sets the children vertical alignment. Defaults to fill.\n\nIf an array is passed, values will target the design system breakpoints.\n```ts\n// This would apply start on all the different breakpoints\nalign = 'start'\n// This would apply fill on mobile, center on tablet and start on desktop\n:align=\"['fill', 'center', 'start']\"\n```",
    "options": [
      "start",
      "center",
      "fill",
      "end"
    ]
  },
  "ma-container/size": {
    "type": "string",
    "options": [
      "small",
      "medium",
      "large"
    ]
  },
  "ma-datagrid/rows": {
    "type": "array",
    "description": "Sets the datagrid rows"
  },
  "ma-datagrid/columns": {
    "type": "array",
    "description": "Sets the datagrid columns.\n\nIf `column.value` not present, `column.component` is required, and viceversa.\n```ts\n  <{\n   name: string,\n   value?: any,\n   component?: VueComponent\n  }[]>\n```"
  },
  "ma-datagrid/isLoading": {
    "type": "boolean",
    "description": "Sets the is loading status"
  },
  "ma-datagrid/noResultsText": {
    "type": "string",
    "description": "Displayed text when no data is displayed"
  },
  "ma-heading/level": {
    "type": "string",
    "description": "Set the HTML element tag to ensure the document semantics are meaningful by specifying its level",
    "options": [
      "none",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6"
    ]
  },
  "ma-heading/size": {
    "type": "string",
    "description": "Sets the text element size according to our Design System",
    "options": [
      "xsmall",
      "small",
      "medium",
      "large",
      "xlarge"
    ]
  },
  "ma-heading/tone": {
    "type": "string",
    "description": "Sets the text element color tone",
    "options": [
      "white",
      "red",
      "pink",
      "blue",
      "green",
      "yellow",
      "gray-darker",
      "gray-dark",
      "gray"
    ]
  },
  "ma-heading/align": {
    "type": "string",
    "description": "Set an horitzontal alignment to the heading",
    "options": [
      "left",
      "center",
      "right"
    ]
  },
  "ma-icon/icon": {
    "type": "string",
    "description": "Sets which icon should be displayed",
    "options": [
      "AddContract",
      "Arrow",
      "ArrowToEnd",
      "BulbOn",
      "Checkmark",
      "Close",
      "DetailsContract",
      "DownloadContract",
      "EditContract",
      "Exit",
      "Gas",
      "Invoices",
      "Link",
      "Logo",
      "LongArrow",
      "Mail",
      "Phone",
      "Plug",
      "Reassign",
      "ReassignCircle",
      "UploadContract",
      "User",
      ""
    ]
  },
  "ma-icon/id": {
    "type": "string",
    "description": "Sets icon's id"
  },
  "ma-icon/width": {
    "type": "number|string",
    "description": "Sets icon's width"
  },
  "ma-icon/height": {
    "type": "number|string",
    "description": "Sets icon's height"
  },
  "ma-icon/viewBoxWidth": {
    "type": "number|string",
    "description": "Sets icon's view box width"
  },
  "ma-icon/viewBoxHeight": {
    "type": "number|string",
    "description": "Sets icon's view box height"
  },
  "ma-icon/tone": {
    "type": "string",
    "description": "Sets icon's color tone"
  },
  "ma-icon/title": {
    "type": "string",
    "description": "Sets icon's title"
  },
  "ma-layout/columns": {
    "type": "array|string",
    "description": "Defines the columns layout.\n\nIf an array is passed, values will target the design system breakpoints.\n```ts\n<ma-layout columns=\"12\">...</ma-layout>\n<ma-layout :columns=\"['4', '4', '4']\">...</ma-layout>\n```\n[Layout documentation](https://holaluz.github.io/margarita/?path=/docs/layout-layout--layout)"
  },
  "ma-layout/gap": {
    "type": "array|string",
    "description": "Sets the space gap between child rows and columns.\n\nIf an array is passed, values will target the design system breakpoints.\n```ts\n// This would apply medium on all the different breakpoints\ngap = 'small'\n// This would apply none on mobile, small on tablet and large on desktop\n:gap=\"['none', 'small', 'large']\"\n```\n\n[Spacing tokens documentation](https://holaluz.github.io/margarita/?path=/story/tokens-spacing--page)",
    "options": [
      "none",
      "xsmall",
      "small",
      "medium",
      "large",
      "xlarge",
      "2x-large",
      "3x-large",
      "4x-large",
      "5x-large",
      "6x-large"
    ]
  },
  "ma-layout/justify": {
    "type": "string",
    "description": "Defines how the space between and around content items is distributed. Defaults to start.",
    "options": [
      "space-around",
      "space-between",
      "start",
      "end",
      "center"
    ]
  },
  "ma-layout/verticalAlign": {
    "type": "string",
    "description": "Sets the children vertical alignment. Defaults to fill.\n\nIf an array is passed, values will target the design system breakpoints.\n```ts\n// This would apply start on all the different breakpoints\nalign = 'start'\n// This would apply fill on mobile, center on tablet and start on desktop\n:align=\"['fill', 'center', 'start']\"\n```",
    "options": [
      "start",
      "center",
      "fill",
      "end"
    ]
  },
  "ma-link/category": {
    "type": "string",
    "description": "Sets the component displaying style",
    "options": [
      "primary",
      "secondary",
      "white",
      "gradient",
      "no-background",
      "no-background-white"
    ]
  },
  "ma-link/href": {
    "type": "string"
  },
  "ma-link/rel": {
    "type": "string"
  },
  "ma-list/type": {
    "type": "string",
    "description": "Sets the type of list",
    "options": [
      "bullet",
      "check",
      "ordered"
    ]
  },
  "ma-list/space": {
    "type": "string",
    "options": [
      "small",
      "medium"
    ]
  },
  "ma-list-marker/type": {
    "type": "string"
  },
  "ma-list-marker/index": {
    "type": "number"
  },
  "ma-modal/title": {
    "type": "string",
    "description": "Sets modal's title"
  },
  "ma-modal/width": {
    "type": "string",
    "description": "Sets modal's width",
    "options": [
      "small",
      "medium",
      "large"
    ]
  },
  "ma-modal/headerType": {
    "type": "string",
    "description": "Sets modal's header background color",
    "options": [
      "white",
      "gradient"
    ]
  },
  "ma-option/v-model": {
    "type": "string|number|boolean|array",
    "description": "Component's model value"
  },
  "ma-option/id": {
    "type": "string",
    "description": "Sets the component's id"
  },
  "ma-option/value": {
    "type": "string|number|boolean",
    "description": "Sets the option value"
  },
  "ma-option/disabled": {
    "type": "boolean",
    "description": "Sets if element should be disabled"
  },
  "ma-option/card": {
    "type": "boolean",
    "description": "Sets element's style to look like a card"
  },
  "ma-option/type": {
    "type": "string",
    "description": "Sets element's input type",
    "options": [
      "radio",
      "checkbox"
    ]
  },
  "ma-option/tone": {
    "type": "string",
    "description": "Sets the label element color tone",
    "options": [
      "white",
      "red",
      "pink",
      "blue",
      "green",
      "yellow",
      "gray-darker",
      "gray-dark",
      "gray"
    ]
  },
  "ma-option/size": {
    "type": "string",
    "description": "Sets the size of the component",
    "options": [
      "xsmall",
      "small",
      "medium"
    ]
  },
  "ma-pagination/buttonsNumber": {
    "type": "number",
    "description": "Sets the amount of page buttons' to be displayed"
  },
  "ma-pagination/totalItems": {
    "type": "number",
    "description": "Defines total amount of items to be displayed"
  },
  "ma-pagination/itemsPerPage": {
    "type": "number",
    "description": "Defines amount of items that will be displayed per each page"
  },
  "ma-pagination/leftButtonAria": {
    "type": "string",
    "description": "Sets left arrow button aria label"
  },
  "ma-pagination/rightButtonAria": {
    "type": "string",
    "description": "Sets right arrow button aria label"
  },
  "ma-pagination/numberButtonAria": {
    "type": "string",
    "description": "Sets numbered button aria label"
  },
  "ma-pagination/startPage": {
    "type": "number",
    "description": "Sets initial page number"
  },
  "ma-pill/tone": {
    "type": "string",
    "description": "Sets component's styling color tone",
    "options": [
      "green",
      "orange",
      "red",
      "gray",
      "dark",
      "blue",
      "pink"
    ]
  },
  "ma-pill/text": {
    "type": "number|string",
    "description": "Sets text to be displayed"
  },
  "ma-range/v-model": {
    "type": "string",
    "description": "Current range value"
  },
  "ma-range/steps": {
    "type": "array",
    "description": "Sets the range steps\n.\n```ts\n  <{\n   text: string,\n   value: any,\n  }[]>\n```"
  },
  "ma-range/label": {
    "type": "string",
    "description": "Sets component's label"
  },
  "ma-range/id": {
    "type": "string",
    "description": "Sets component's id"
  },
  "ma-select/options": {
    "type": "array",
    "description": "Available select component options"
  },
  "ma-select/v-model": {
    "type": "string|number|boolean|object",
    "description": "Component's model value"
  },
  "ma-select/id": {
    "type": "string",
    "description": "Sets component's id"
  },
  "ma-select/label": {
    "type": "string",
    "description": "Sets component's label\n\n⚠️ If attribute aria-label is defined, input's label will be 'visually' hidden"
  },
  "ma-select/errorMessage": {
    "type": "string",
    "description": "Sets component's error message to display if `hasError === true`"
  },
  "ma-select/hasError": {
    "type": "boolean",
    "description": "Displays or hides error message defined through `errorMessage` property"
  },
  "ma-select/formatter": {
    "type": "function",
    "description": "Formats the given options before rendering them\n\n```ts\nformattedOption = {\n   disabled: boolean,\n   label: string,\n   text: string,\n   value: string | number | boolean | object\n }\n```"
  },
  "ma-select/fieldClass": {
    "type": "string",
    "description": "Applies given styling class to component"
  },
  "ma-select/weight": {
    "type": "string",
    "description": "Applies given styling class to component",
    "options": [
      "bold",
      "semibold",
      "medium",
      "regular"
    ]
  },
  "ma-stack/space": {
    "type": "array|string",
    "description": "Sets the space gap between children.\n\nIf an array is passed, values will target the design system breakpoints.\n```ts\n// This would apply medium on all the different breakpoints\nspace = 'small'\n// This would apply none on mobile, small on tablet and large on desktop\n:space=\"['none', 'small', 'large']\"\n```\n\n[Spacing tokens documentation](https://holaluz.github.io/margarita/?path=/story/tokens-spacing--page)",
    "options": [
      "none",
      "xsmall",
      "small",
      "medium",
      "large",
      "xlarge",
      "2x-large",
      "3x-large",
      "4x-large",
      "5x-large",
      "6x-large"
    ]
  },
  "ma-stack/align": {
    "type": "array|string",
    "description": "Sets the children alignment. Defaults to fill.\n\nIf an array is passed, values will target the design system breakpoints.\n```ts\n// This would apply left on all the different breakpoints\nalign = 'left'\n// This would apply fill on mobile, center on tablet and left on desktop\n:align=\"['fill', 'center', 'left']\"\n```",
    "options": [
      "left",
      "center",
      "right",
      "fill"
    ]
  },
  "ma-stack/tag": {
    "type": "string",
    "description": "Set the HTML element tag that wraps the content.",
    "options": [
      "div",
      "section",
      "ul",
      "ol"
    ]
  },
  "ma-text/tag": {
    "type": "string",
    "description": "Set the HTML element tag to ensure the document semantics are meaningful",
    "options": [
      "p",
      "span",
      "label"
    ]
  },
  "ma-text/size": {
    "type": "string",
    "description": "Sets the text element size according to our Design System",
    "options": [
      "xsmall",
      "small",
      "medium"
    ]
  },
  "ma-text/italic": {
    "type": "boolean",
    "description": "Applies italic style to text"
  },
  "ma-text/bold": {
    "type": "boolean",
    "description": "Applies bold weigth to text"
  },
  "ma-text/tone": {
    "type": "string",
    "description": "Sets the text element color tone",
    "options": [
      "white",
      "red",
      "pink",
      "blue",
      "green",
      "yellow",
      "gray-darker",
      "gray-dark",
      "gray"
    ]
  },
  "ma-text/align": {
    "type": "string",
    "description": "Set an horitzontal alignment to the text",
    "options": [
      "left",
      "center",
      "right"
    ]
  },
  "ma-text-field/errorMessage": {
    "type": "string",
    "description": "Sets component's error message to display if `hasError === true`"
  },
  "ma-text-field/id": {
    "type": "string",
    "description": "Sets component's id"
  },
  "ma-text-field/hasError": {
    "type": "boolean",
    "description": "Displays or hides error message defined through `errorMessage` property"
  },
  "ma-text-field/label": {
    "type": "string",
    "description": "Sets component's label\n\n⚠️ If attribute aria-label is defined, input's label will be 'visually' hidden"
  },
  "ma-text-field/tone": {
    "type": "string",
    "description": "Sets the label element color tone",
    "options": [
      "white",
      "red",
      "pink",
      "blue",
      "green",
      "yellow",
      "gray-darker",
      "gray-dark",
      "gray"
    ]
  },
  "ma-text-field/bold": {
    "type": "boolean",
    "description": "Applies bold weigth to label"
  },
  "ma-text-field/disabled": {
    "type": "boolean",
    "description": "Disables the input element"
  },
  "ma-text-field/v-model": {
    "type": "string|number",
    "description": "Component's model value"
  },
  "ma-text-field/suffix": {
    "type": "string",
    "description": "Component's suffix inside the text field"
  }
}